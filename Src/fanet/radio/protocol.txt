--== PHY ==--

868.2Mhz
Syncword 0xF1
250kHz Bandwidth
Spreading Factor 7
ExplicitHeader: Coding Rate CR 5-8/8 (depending on #neighbors), CRC for Payload 

--== FANET MAC ==--


Header:
[Byte 0]
7bit 		Extended Header
6bit 		Forward
5-0bit 		Type

Source Address:
[Byte 1-3]
1byte		Manufacturer
2byte		Unique ID (Little Endian)
 
Extended Header:
[Byte 4 (if Extended Header bit is set)]
7-6bit 		ACK:
			0: none (default)
			1: requested
			2: requested (via forward, if received via forward (received forward bit = 0). must be used if forward is set)
			3: reserved
5bit		Cast:
			0: Broadcast (default)
			1: Unicast (adds destination address (8+16bit)) (shall only be forwarded if dest addr in cache and no 'better' retransmission received)
4bit 		Signature (if 1, add 4byte)
3-0bit 		Reserved	(ideas: indicate multicast interest add 16bit addr, emergency)

Destination Address (if unicast is set):
[Byte 5-7]
1byte		Manufacturer
2byte		Unique ID (Little Endian)

Signature (if signature bit is set):
[Byte 5-8 or Byte 8-11 (if unicast is set)]
4byte 		Signature



Types:
-----------

ACK (Type = 0)
No Payload, must be unicast

-----------

Tracking (Type = 1)
[recommended intervall: floor((#neighbors/10 + 1) * 5s) ]
Note: Done by app layer of the fanet module

[Byte 0-2]	Position	(Little Endian, 2-Complement)
bit 0-23	Latitude 	(Absolute, see below)
[Byte 3-5]	Position	(Little Endian, 2-Complement)
bit 0-23	Longitude 	(Absolute, see below)

[Byte 6-7]	Type		(Little Endian)
bit 15 		Online Tracking
bit 12-14	Aircraft Type
			0: Other
			1: Paraglider
			2: Hangglider
			3: Balloon
			4: Glider
			5: Powered Aircraft
			6: Helicopter
			7: UAV
bit 11		Altitude Scaling 1->4x, 0->1x
bit 0-10	Altitude in m

[Byte 8]	Speed		(max 317.5km/h)
bit 7		Scaling 	1->5x, 0->1x
bit 0-6		Value		in 0.5km/h		

[Byte 9]	Climb		(max +/- 31.5m/s, 2-Complement)
bit 7		Scaling 	1->5x, 0->1x
bit 0-6		Value		in 0.1m/s

[Byte 10]	Heading
bit 0-7		Value		in 360/256 deg

[optional]
[Byte 11]	Turn rate 	(max +/- 64deg/s, 2-Complement)
bit 7		Scaling 	1->4x, 0->1x
bit 0-6		Value 		in 0.25deg/s	

------------

Name (Type = 2)
[recommended intervall: every 4min]

8bit String (of arbitrary length, \0 termination not required)

------------

Message (Type = 3)

[Byte 0]	Header
bit 0-7 	Subheader, Subtype (TBD)
			0: Normal Message
			
8bit String (of arbitrary length)

------------

Service (Type = 4)

[Byte 0]	Header	(additional payload will be added in order 6 to 1, followed by Extended Header 7 to 0)
bit 7		Internet Gateway (no additional payload required, other than a position)
bit 6		Temperature (+1byte in 0.5 degree, 2-Complement)
bit 5		Wind (+3byte: 1byte Heading in 360/256 degree, 1byte speed and 1byte gusts in 0.2km/h (each: bit 7 scale 5x or 1x, bit 0-6))
bit 4		Humidity (+1byte: in 0.4% (%rh*10/4))
bit 3		Barometric pressure (+2byte: in 10Pa, offset by 430hPa, unsigned little endian (hPa-430)*10)
bit 2		TBD
bit 1		State of Charge  (+1byte lower 4 bits: 0x00 = 0%, 0x01 = 6.25%, .. 0x0F = 100%)
bit 0		Extended Header (+1byte directly after byte 0) (TBD, it may indicate the number of available landmarks) 
		The following is only mandatory if no additional data will be added. Broadcasting only the gateway flag doesn't require pos information. 
[Byte 1-3 or Byte 2-4]	Position	(Little Endian, 2-Complement)		
bit 0-23	Latitude	(Absolute, see below)
[Byte 4-6 or Byte 5-7]	Position	(Little Endian, 2-Complement)
bit 0-23	Longitude   (Absolute, see below)
+ additional data according to the sub header order (bit 6 down to 1)

------------

Landmarks (Type = 5)

[Byte 0]
bit 7		TBD
bit 4-6		Number of landmark feature (aka Tag) (Required to replace old one. As e.g. the wind changed a feature may also change.)
bit 0-3		Subtype:
			0:    TBD				(maybe used to remove the feature?)
			1:    Text	
			2:    Line
			3:    Area
			4:    Circle
			5:    Filled circle
			6:    3D Line				suitable for cables							
			7:    3D Area				suitable for airspaces
			8:    3D filled circle			suitable for airspaces
			6-14: TBD
			15:	  Position (absolute)
[Byte 1]
bit 7-4		'Number of elements'-1=n (String in words n<=16 (max string -> 32byte), circles n<=6, others n<=8)
bit 3-0		Layer:
			0:	Info
			1:	Warning
			2:	Keep out
			3:	Touch down
[n Elements]
			Text (1): 				Position (4 Bytes compressed, see below, only once) + String (2 Byte aligned, zero-termination is optional)
			Line (2): 				Position (4 Bytes compressed, see below, minimum 2 elements)
			Area (3): 				Position (4 Bytes compressed, see below, minimum 3 elements)
			Circle (4):				Position (4 Bytes compressed, see below) + Radius (in: ('1Byte' + 1) * 25m) (0->25m, 1->50m, ...)
			Filled Circle (5):			Position (4 Bytes compressed, see below) + Radius (in: ('1Byte' + 1) * 25m)
			3D Line (6):				n times: Position (4 Bytes compressed, see below) + Altitude (('1Byte'+107) * 20m) (-127->-400m, 127->4680m)
			3D Area (7):				Altitude bottom, top (each: ('1Byte'+107) * 20m) (-127->-400m, 127->4680m, only once) + n times: 
										Position (4 Bytes compressed, see below) + Radius (in: ('1Byte' + 1) * 25m) (0->25m, 1->50m, ...)
			3D filled Circle (8):			Altitude bottom, top (each: ('1Byte'+107) * 20m) (-127->-400m, 127->4680m, only once) + n times:
										Position (4 Bytes compressed, see below) + Radius (in: ('1Byte' + 1) * 25m)
										
			Reference Coordinates (15):		Position (6 byte absolute, see below, once only). Alternatively Type 4 position shall be used.

------------

Remote Configuration (Type = 6)
Note 1: Signature (symmetric) is highly recommended
Note 2: In order to indicate a successful configuration the receiver shall transmit the configured feature instantaneously.
Note 3: Each reply feature with a suitable mask shall be played using round robin w/ 20sec intervals followed by a 3min pause.
Note 4: Skytraxx 3.0 silently assumes that Remote Configuration is available is if a Service from the same address is present.

[Byte 0]
bit 7-0		Subtype:
			0:	 Acknowledge configuration: Byte [1] subtype of ack
			1:	 Request / Advertise configurable ... TODO
			2:	 Position. Byte [1-6] latitude/longitude, Byte [7-8] altitude, Byte [9] heading (encoded like in type 1)
			3 .. 15: Broadcast Reply feature. Byte [1] is type (and forward bit) followed by its payload.
				 Recommendation: 3 for name. 8..15 for landmark 0..7
TODO: Wind dependent feature overwrite! add 8x13 slots per wind direction?
------------

Ground Tracking (Type = 7)
[recommended interval: floor((#neighbors/10 + 1) * 5s) ]

[Byte 0-2]	Position	(Little Endian, 2-Complement)
bit 0-23	Latitude 	(Absolute, see below)
[Byte 3-5]	Position	(Little Endian, 2-Complement)
bit 0-23	Longitude 	(Absolute, see below)
[Byte 6]
bit 7-4		Type
			0:    Other
			1:    Walking
			2:    Vehicle
			3: 	  Bike
			4:    Boot
			8:    Need a ride
			12:   Need technical support
			13:   Need medical help
			14:   Distress call
			15:   Distress call automatically
			Rest: TBD
bit 3-1		TBD
bit 0		Online Tracking

------------

Coordinate Formats

Compressed (reference coordinate required):
[Byte 0-1]	Position	(Little Endian, 2-Complement)
bit 0-15	Latitude
[Byte 2-3]	Position	(Little Endian, 2-Complement)
bit 0-15	Longitude

			Details:
			bit 15		even 0 odd 1 degree
			ddeg = (signed 15bit) * value / 2^15
			if(round(my_deg) is equal to bit15)
				deg = round(my_deg) + ddeg
			else
				find minimum of |round(my_deg)-1 + ddeg - my_lat| and |round(my_lat1)+1 + ddeg - my_lat| 
			
			(Max allowed distance 1deg -> approx. 111km latitude or longitude@latitude=equator,
			longitude@latitude=60deg: 55km, longitude@latitude=70deg: 38km (critical)) 
			(Max error <2m)
			(Note: longitude block-bit could be extended by a further bit in case of lat > +/-60deg, future work...)

Absolute:
[Byte 0-2]	Position	(Little Endian, 2-Complement)
bit 0-23	Latitude
[Byte 3-5]	Position	(Little Endian, 2-Complement)
bit 0-23	Longitude

			Details:
			Latitude = value_lat/93206	\in [-90, +90]
			Longitude = value_lon/46603 \in [-180, +180]
			(Note: 32bit floating point is required for direct conversion)


------------

Signature (symmetric)

Use SHA1 and iterate over pseudo header (first 4 byte:  type + source address, were bits 6 and 7 of byte 0 are set to 0), over the payload, and over a pre-shared secret/key.
The first 4 byte of the resulting hash shall be interpreted as 32bit integer and put into the signature field (= normal order due to little endian encoding).

------------

//todo address detection, etc...
//todo: as a base station is in rage, do not forward tracking info. only forward tracking info if very little traffic is present...
//todo: forward bit for type 1 should only be set it no inet gateway in in close range

Notes:
------
Version number:
We omitted a bit field that shows the protocol version as this would take to much space. The app layer should provide this, if required. (Todo)

Device ID:
-For unregistered Devices/Manufacturers: Set the Manufacturer to 0xFC or 0xFD and choose a random ID between 0x0001 and 0xFFFE. 
List on the channel if the id is already used.
-0xFE shall be used for multicast (E.g. competition/group messaging).
-The manufacturers 0x00 and 0xFF as well as the IDs 0x0000 and 0xFFFF are reserved.


Manufacturer IDs:
0x00		[reserved]
0x01		Skytraxx
0x03		BitBroker.eu
0x04		AirWhere
0x05		Windline
0x06		Burnair.ch
0x07		SoftRF
0x11		Skytraxx+FLARM, FANET+
...
0xFC		Unregistered Devices
0xFD		Unregistered Devices
0xFE		[Multicast]
0xFF		[reserved]
